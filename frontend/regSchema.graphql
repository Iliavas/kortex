mutation createUser($username:String, $password:String){
  createUser(password:$password, username:$username){
    ok
  }
}

mutation getToken($username:String!, $password:String!){
  tokenAuth(username:$username, password:$password){
    token
  }
}

mutation setVisitProfile(
  $name:String, $surname:String,
	$midname:String, $positionInCompany:String,
  $description:String, $secondDescr:String,
  $id:ID) {
    changeVisitCardProfile(
      description:$description, name:$name,
      surname:$surname, midname:$midname,
      positionInCompany:$positionInCompany,
      secondDescr:$secondDescr,
      visitCardId:$id
    ){
      ok
    }
  }


query getVisit($token:String){
  getVisitByUser(token:$token){
    id
    name, midname, surname, positionInCompany, description,
    imageUrl
    secondDescr,
    contacts{
      phone,
      id,
      website,
      tgLink,
      whatsappLink,
      instLink,
      vkLink,
      facebookLink,
      twitterLink
    },
    projectSet{
      edges{
        node{
          id
        }
      }
    },
    photoSet{
      edges{
        node{
          id
        }
      }
    },
     geopos{
      lattitude,
      longitude
    }
  }
}

query getVisitById($id:String!){
  visit(id:$id){
    id, blockDescr
    name, midname, surname, positionInCompany, description,
    fullImgUrl,
    zoomLogo,
    xLogo,
    yLogo,
    secondDescr,
    geoDescr,
    photoDescr,
    projectDescr,
    theme
    contacts{
      phone,
      id,
      website,
      tgLink,
      whatsappLink,
      instLink,
      vkLink,
      facebookLink,
      twitterLink
    },
    projectSet{
      edges{
        node{
          id, name, link
        }
      }
    },
    photoSet{
      edges{
        node{
          id, url
        }
      }
    },
    geopos{
      lattitude,
      longitude
    },
    blockSet{
			edges{
        node{
          id, name, descr, mainPart
        }
      }
    }
  }
}

mutation changeContacts(
  $contacts_id:String,
  $phone:String, $website:String,
  $tgLink:String, $whatsappLink:String,
  $instLink:String, $vkLink:String,
  $facebookLink:String, $twitterLink:String
) {
  changeContacts(
    contactsId:$contacts_id,
    phone:$phone, website:$website,
    tgLink:$tgLink, whatsappLink:$whatsappLink,
    instLink:$instLink, vkLink:$vkLink,
    facebookLink:$facebookLink,
    twitterLink:$twitterLink
  ){
    ok
  }
}

mutation addProject($projectName:String, $link:String, $id:ID){
  addProject(cardId:$id, link:$link, name:$projectName){
		project{
      id
    }
  }
}

mutation removeProject($projectId:ID!){
	removeProject(projectId:$projectId){
    ok
  }
}

query getVisitId($token:String){
  getVisitByUser(token:$token){
    id
  }
}

query getAva($token:String){
	getVisitByUser(token:$token){
  	imageUrl, id, fullImgUrl, xLogo, yLogo, zoomLogo
	}
}

mutation setAva($ava:Upload!, $id:ID) {
  changeVisitCardProfilePhoto(visitCardId:$id, photo:$ava) {
    newPath
  }
}

query getCreds($token:String){
  getVisitByUser(token:$token) {
    id, name, surname, midname
  }
}

query getPos($token:String){
  getVisitByUser(token:$token) {
    id, positionInCompany
  }
}

query getDescr($token:String) {
  getVisitByUser(token:$token) {
    id, description
  }
}

query getContacts($token:String) {
  getVisitByUser(token:$token) {
    contacts{
      id,
      facebookLink,
      vkLink,
      website,
      whatsappLink,
      twitterLink,
      tgLink,
    	phone,
      instLink
    }
  }
}

query getSecDescr($token:String) {
  getVisitByUser(token:$token) {
    secondDescr,
    id
  }
}

query getProjects($token:String) {
  getVisitByUser(token:$token) {
    id, projectDescr
    projectSet{
			edges{
        node{
          name, link, id
        }
      }
    }
  }
}


mutation editProj($projectName:String, $link:String, $id:ID){
  editProject(link:$link, name:$projectName, projectId:$id) {
		ok
  }
} 

query getImage($token:String) {
  getVisitByUser(token:$token){
    id, photoDescr
    photoSet{
			edges{
				node{
          id, url
        }
      }
    }
  }
}
mutation addImg($card_id:ID, $image:Upload) {
	addPhoto(cardId:$card_id, photo:$image) {
    photo{
      id, url
    }
  }
}

mutation deleteImg($img_id:ID){
  removePhoto(photoId:$img_id) {
    ok
  }
}

mutation changeImg($new_img:Upload, $id:ID) {
  editPhoto(newPhoto:$new_img, photoId:$id) {
    newImg{
      url
    }
  }
}

query getGeo($token:String) {
	getVisitByUser(token:$token) {
    geoDescr,
    id,
    geopos{
      id,
      lattitude,
      longitude
    }
  }
}

mutation setGeo($geoId:ID, $lat:Float, $long:Float) {
  setGeopos(geoposId:$geoId, lat:$lat, long:$long) {
    ok
  }
}

mutation changeProjectDescr($card_id:ID, $proj_descr:String){
  changeNames(cardId:$card_id, projectsName:$proj_descr) {
    ok
  }
}

mutation changeImageDescr($card_id:ID, $image_descr:String){
  changeNames(cardId:$card_id, photoName:$image_descr) {
    ok
  }
}

mutation changeGeoDescr($card_id:ID, $geo_descr:String){
  changeNames(cardId:$card_id, geoName:$geo_descr) {
    ok
  }
}

mutation changeState($token:String, $state:String){
  changeTheme(token:$token, theme:$state){
    ok
  }
}

query getState($token:String) {
  getVisitByUser(token:$token) {
    theme,
    id
  }
}

mutation setFullPhoto($id:ID, $photo:Upload){
  changeFullPhoto(id:$id, photo:$photo){
    newUrl
  }
}

query getId($token:String){
  getVisitByUser(token:$token){
    id
  }
}

mutation changeLogoCords($card_id:ID, $y:Float, $x:Float, $zoom:Float){
  changeLogoCords(xCord:$x, yCord:$y, cardId:$card_id, zoom:$zoom){
    ok
  }
}

mutation verify($token:String!) {
	verifyAccount(token:$token) {
		errors
  }
}

mutation register($email:String!, $password:String!, $password2:String!){
  register(email:$email, password1:$password, username:$email, password2:$password2){
    token, errors
  }
  
}

mutation sign($email:String, $password:String!) {
	tokenAuth(password:$password, username:$email) {
    token, errors
    user{
      verified
    }
  }
}

query getVerbId($token:String) {
  getVisitByUser(token:$token){
		id, verbId
  }
}

mutation changeVerbId($id:String, $token:String) {
  updateVerbId(token:$token, newId:$id) {
    ok
  }
}

mutation createBlock($name:String, $descr:String, $cardId:ID, $main_part:String){
  createBlock(descr:$descr, cardId:$cardId, name:$name, mainPart:$main_part){
    block{
      id
    }
  }
}

query getBlocks($token:String){
  getVisitByUser(token:$token){
    id, blockDescr
    blockSet{
      edges{
        node{
          name, id, descr, mainPart
        }
      }
    }
  }
}

mutation deleteBlock($blockId:ID) {
	deleteBlock(blockId:$blockId) {
		ok
  }
}

mutation changeBlock($blockId:ID, $name:String, $descr:String, $main_part:String) {
  updateBlock(name:$name, descr:$descr, blockId:$blockId, mainPart:$main_part){
		ok
  }
}

mutation isUserAdmin($token:String, $cardId:ID) {
	isUserAdmin(cardId:$cardId, token:$token) {
    isAdmin
  }
}

mutation changePassword($newPassword:String!, $token:String!) {
  changePassword(token:$token, newPassword:$newPassword) {
    ok
  }
}

mutation changeBlockDescr($card_id:ID, $new_descr:String) {
  changeBlockDescr(cardId:$card_id, newDesc:$new_descr) {
		ok
  }
}